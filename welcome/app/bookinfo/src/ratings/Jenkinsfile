pipeline{
    agent any
    options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 1, unit: 'SECONDS')
    }
environment{
    IMAGE_NAME='ratings'
    VERSION="v${env.BUILD_NUMBER}"
    REPO='bennylederh'
    CREDENTIALS_ID='myDHCred'
}
stages {
    stage('Build'){
        steps {
            script {
              sh 'docker build --target build --tag  ${IMAGE_NAME}:${VERSION}-build -f welcome/app/bookinfo/src/ratings/Dockerfile welcome/app/bookinfo/src/ratings'
            }
        }
    }
    stage('lint/Test'){
            steps{
                script{
                    sh'docker build --target lint/test  --tag ${IMAGE_NAME}:${VERSION}-linttest -f welcome/app/bookinfo/src/ratings/Dockerfile welcome/app/bookinfo/src/ratings'
                    sh'docker run --rm ${IMAGE_NAME}:${VERSION}-linttest'}
                }
    }
    stage('Push'){
        steps{
            script{
                docker.withRegistry('https://index.docker.io/v1/',"${CREDENTIALS_ID}"){
                    sh'dockerpush${REPO}/${IMAGE_NAME}:${VERSION}'
                }
            }
        }
    }
}
}