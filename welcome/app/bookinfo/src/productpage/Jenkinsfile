pipeline{
    agent any
    options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 1, unit: 'SECONDS')
    }
environment{
    IMAGE_NAME='my-docker-image'
    VERSION="v${env.BUILD_NUMBER}"
    REPO='my-docker-repo'
    CREDENTIALS_ID='myDockerCred'
}
stages {
    stage('Build'){
        steps {
            script {
              sh 'docker build --target build --tag ${IMAGE_NAME}:${VERSION}-build -f welcome/app/bookinfo/src/productpage/Dockerfile welcome/app/bookinfo/src/productpage'
            }
        }
    }
    stage('Test'){
            steps{
                script{
                    sh'docker build--target test --tag ${IMAGE_NAME}:${VERSION}-test .'
                    sh'docker run --rm${IMAGE_NAME}:${VERSION}-test'}
                }
    }
    stage('Push'){
        steps{
            script{
                docker.withRegistry('https://index.docker.io/v1/',"${CREDENTIALS_ID}"){
                    sh'dockerpush${REPO}/${IMAGE_NAME}:${VERSION}'
                }
            }
        }
    }
}
}